<% layout("/layouts/boilerplate") %> <%= success %>

<style>
  #filters {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
  }

  .filter {
    text-align: center;
    margin-right: 2rem;
    margin-top: 2rem;
    opacity: 0.7;
  }
  .filter:hover {
    opacity: 1;
    cursor: pointer;
  }
  .filter.selected {
    opacity: 1;
    font-weight: bold;
  }

  .filter p {
    font-size: 0.8rem;
  }

  .taxInfo {
    display: none;
  }

  .tax-toggle {
    border: 1px solid black;
    border-radius: 1rem;
    height: 2.5rem;
    padding: 1rem;
    margin-left: 2rem;
    display: flex;
    align-items: center;
  }
</style>

<div id="filters">
  <div class="filter" data-category="trending">
    <div><i class="fa-solid fa-fire"></i></div>
    <p>Trending</p>
  </div>
  <div class="filter" data-category="rooms">
    <div><i class="fa-solid fa-bed"></i></div>
    <p>Rooms</p>
  </div>
  <div class="filter" data-category="iconic-cities">
    <div><i class="fa-solid fa-mountain-city"></i></div>
    <p>Iconic Cities</p>
  </div>
  <div class="filter" data-category="mountain">
    <div><i class="fa-solid fa-mountain"></i></div>
    <p>Mountain</p>
  </div>
  <div class="filter" data-category="castle">
    <div><i class="fa-brands fa-fort-awesome"></i></div>
    <p>Castle</p>
  </div>
  <div class="filter" data-category="amazing-pools">
    <div><i class="fa-solid fa-person-swimming"></i></div>
    <p>Amazing Pools</p>
  </div>
  <div class="filter" data-category="camping">
    <div><i class="fa-solid fa-campground"></i></div>
    <p>Camping</p>
  </div>
  <div class="filter" data-category="farms">
    <div><i class="fa-solid fa-cow"></i></div>
    <p>Farms</p>
  </div>
  <div class="filter" data-category="arctic">
    <div><i class="fa-regular fa-snowflake"></i></div>
    <p>Arctic</p>
  </div>
  <div class="filter" data-category="doms">
    <div><i class="fa-solid fa-igloo"></i></div>
    <p>Doms</p>
  </div>
  <div class="filter" data-category="boats">
    <div><i class="fa-solid fa-ship"></i></div>
    <p>Boats</p>
  </div>

  <div class="tax-toggle">
    <div class="form-check-reverse form-switch">
      <input
        class="form-check-input"
        type="checkbox"
        role="switch"
        id="switchCheckDefault"
      />
      <label class="form-check-label" for="switchCheckDefault"
        >Default total after Taxes</label
      >
    </div>
  </div>
</div>

<div
  id="listings-container"
  class="row row-cols-lg-3 row-cols-md-2 row-cols-sm-1 mt-3"
>
  <% for(let listing of allListings){ %>
  <a href="/listings/<%= listing._id %>" class="listing-link">
    <div class="card col listing-card">
      <img
        src="<%=listing.image.url%>"
        class="card-img-top"
        alt="listing_image"
        style="height: 20rem"
      />
      <div class="card-img-overlay"></div>
      <div class="card-body">
        <p class="card-text">
          <b><%= listing.title %> </b><br />
          &#8377; <%= listing.price.toLocaleString("en-IN")%> / night
          <i class="tax-info"> &nbsp; &nbsp;+18% GST</i>
        </p>
      </div>
    </div>
  </a>
  <% } %>
</div>

<script>
  let taxSwitch = document.getElementById("switchCheckDefault");
  taxSwitch.addEventListener("click", () => {
    let taxInfo = document.getElementsByClassName("tax-info");
    for (info of taxInfo) {
      if (info.style.display != "inline") {
        info.style.display = "inline";
      } else {
        info.style.display = "none";
      }
    }
  });
</script>

<script>
  const filters = document.querySelectorAll("#filters .filter");
  const listingsContainer = document.getElementById("listings-container");

  filters.forEach((filter) => {
    filter.addEventListener("click", async () => {
      const isSelected = filter.classList.contains("selected");

      // Remove selection from all filters
      filters.forEach((f) => f.classList.remove("selected"));

      // Toggle: if it wasn't selected, select it; if it was, keep all unselected
      if (!isSelected) {
        filter.classList.add("selected");
      }

      const category = !isSelected ? filter.dataset.category : ""; // if unselected, query all

      try {
        const response = await fetch(
          `/listings${category ? "?category=" + category : ""}`,
          {
            headers: { "X-Requested-With": "XMLHttpRequest" },
          }
        );
        const html = await response.text();
        listingsContainer.innerHTML = html; // only inner content updated
      } catch (err) {
        console.error(err);
      }
    });
  });
</script>
